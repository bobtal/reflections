What happens when you initialize a repository? Why do you need to do it?
	
	.git folder is created which contains the metadata about the repository. I need to
	do it if I want to have a git repository created so I can start tracking files in the
	directory in which the repository is created.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	Staging area is just different than the working directory and the repository. The name is pretty self
	explanatory, it's like an unwrapped package, where you can add and remove files before you deicde to
	send the package to your storage room. Once you decide to send it (commit), you add a label to it 
	(commit message) so you know what it contains.
	The value that the staging area offers is the ability to choose which files should be included in the next commit so the commit represents a logical unit even though there might be changes done in other
	files as well (which sounds like a bad idea though). But still, changes done to other files could
	be committed in the next commit just so that they don't mix up with the previous one which probably
	had an intended logical purpose. The next one could have a more generic message, like committing files
	which were autoupdated/generated in the meantime but these updates shouldn't really impact the functionality added in the previous commit I assume.

How can you use the staging area to make sure you have one commit per logical change?

	Add only the updated files which contain the logical change you want included in the commit to the staging area, so that when using git commit, only those files are part of the commit. The other updated files might be later added to the staging area and committed again if they are part of another separate logical change.